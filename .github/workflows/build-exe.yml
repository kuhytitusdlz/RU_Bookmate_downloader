name: Build Windows EXE

on:
  push:
    tags:
      - "v*"
    branches:
      - main
      - master
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-windows-exe:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if (Test-Path requirements.txt) {
            pip install -r requirements.txt
          } else {
            echo "requirements.txt not found, installing known deps"
            pip install httpx beautifulsoup4 ebooklib reportlab pillow pywebview lxml
          }
          pip install pyinstaller

      - name: Build EXE with PyInstaller
        run: |
          pyinstaller RUBookmatedownloader.py `
            --name RUBookmateDownloader `
            --onefile `
            --collect-all ebooklib `
            --collect-all bs4 `
            --collect-all reportlab `
            --collect-all PIL

      - name: Install ffmpeg (Chocolatey)
        run: |
          choco install ffmpeg -y --no-progress
          $ffmpegPath = (Get-Command ffmpeg).Source
          echo "FFmpeg at: $ffmpegPath"
          Copy-Item $ffmpegPath dist\RUBookmateDownloader\ffmpeg.exe

      - name: Copy docs
        run: |
          New-Item -ItemType Directory -Force -Path release\RUBookmateDownloader-win64 | Out-Null
          Copy-Item dist\RUBookmateDownloader\RUBookmateDownloader.exe release\RUBookmateDownloader-win64\
          if (Test-Path dist\RUBookmateDownloader\ffmpeg.exe) { Copy-Item dist\RUBookmateDownloader\ffmpeg.exe release\RUBookmateDownloader-win64\ }
          if (Test-Path README.md) { Copy-Item README.md release\RUBookmateDownloader-win64\ }
          if (Test-Path LICENSE) { Copy-Item LICENSE release\RUBookmateDownloader-win64\ }

      - name: Create zip
        run: |
          $zipPath = "release\RUBookmateDownloader-win64.zip"
          if (Test-Path $zipPath) { Remove-Item $zipPath }
          Compress-Archive -Path release\RUBookmateDownloader-win64\* -DestinationPath $zipPath

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: RUBookmateDownloader-win64
          path: release/RUBookmateDownloader-win64.zip

      - name: Publish GitHub Release (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release/RUBookmateDownloader-win64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
